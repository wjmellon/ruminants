tree=pruned.tree,method="ML",se=SE)
summary(litter.mal)
#grab r squared, lambda, and p values from summary
r.v.litmal <- R2(phy = pruned.tree,litter.mal)
r.v.litmal <- format(r.v.litmal[3])
r.v.litmal <-signif(as.numeric(r.v.litmal), digits= 2)
ld.v.litmal<- summary(litter.mal)$modelStruct$corStruct
ld.v.litmal <- signif(ld.v.litmal[1], digits = 2)
p.v.litmal<-summary(litter.mal)$tTable
p.v.litmal<-signif(p.v.litmal[2,4], digits = 3)
ggplot(cutData, aes(y=MalignancyPrevalence*100, x=log10(litter_size))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff", "Amphibia"= "#3B4992ff" ))+
scale_y_continuous(
limits = c(0,75),
breaks = c(0, 25,45,75),
labels = c(0, 25,45,75))+
coord_cartesian(xlim = c(log10(min(cutData$litter_size)),log10(max(cutData$litter_size))),
ylim = c(0,45),clip = "off")+
geom_abline(intercept = coef(litter.mal)[1]*100, slope =  coef(litter.mal)[2]*100,
color = 'grey',size = 1.2) +
labs(title = "Malignancy Prevalence vs. Litter Size",
subtitle =bquote(p-value:.(r.v.litmal)~R^2:.(p.v.litmal)~Lambda:.(ld.v.litmal))) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Malignancy Prevalence (%)") +
xlab("(log10) Litter Size") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
geom_text_repel(aes(label=ifelse(MalignancyPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+   labs(colour="Clade", size="Total Necropsies")+
guides(size=guide_legend())+
annotate("text", x=-0.35, y=50.3, label = "2", size = 7)
ggsave(filename='S2litmal.pdf', width=13, height=10, limitsize=FALSE,bg="white")
#rbind adds a new row to a dataframe
SummaryStats <- rbind(SummaryStats, list("Mal vs Lit",nrow(cutData), r.v.litmal, p.v.litmal, ld.v.litmal))
#Print stats
print(SummaryStats)
}
### Longevity model
#longevity neo
cutData <- DataRum[,c(5,9,10,11,13,40,42),drop=FALSE]
cutData[cutData$max_longevity.months. < 0,] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies<-cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
longevity.neo<-pglsSEyPagel(NeoplasiaPrevalence~max_longevity.months.,data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(longevity.neo)
#grab r squared, lambda, and p values from summary
r.v.longneo <- R2(phy = pruned.tree,longevity.neo)
r.v.longneo <- format(r.v.longneo[3])
r.v.longneo <-signif(as.numeric(r.v.longneo), digits= 2)
ld.v.longneo<- summary(longevity.neo)$modelStruct$corStruct
ld.v.longneo <- signif(ld.v.longneo[1], digits = 2)
p.v.longneo<-summary(longevity.neo)$tTable
p.v.longneo<-signif(p.v.longneo[2,4], digits = 3)
longneo<-ggplot(cutData, aes(y=NeoplasiaPrevalence*100, x=log10(max_longevity.months.))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff", "Amphibia"= "#3B4992ff" ))+
scale_y_continuous(
limits = c(0,75),
breaks = c(0, 25,50,75),
labels = c(0, 25,50,75))+
geom_abline(intercept = coef(longevity.neo)[1]*100, slope =  coef(longevity.neo)[2]*100,
color = 'grey',size = 1.2) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Neoplasia Prevalence (%)") +
xlab("(log10) Max Longevity (Mo)") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
scale_size(name   = "Total Necropsies",
breaks = c(20,100,200,300,477),
labels =  c(20,100,200,300,477))+
geom_text_repel(aes(label=ifelse(NeoplasiaPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
guides(colour = guide_legend(override.aes = list(size=5))) +
labs(title = "B")+
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+
labs(colour="Clade", size="Total Necropsies")
#ggsave(filename='longneo.pdf', width=13, height=10, limitsize=FALSE,bg="white")
#rbind adds a new row to a dataframe
SummaryStats <- rbind(SummaryStats, list("Neo vs Longevity",nrow(cutData), r.v.longneo, p.v.longneo, ld.v.longneo))
#Print stats
print(SummaryStats)
}
#create weight over longevity model
#wgtneo/longneo
#ggsave(filename='wgtlong.pdf', width=9.5, height=18, limitsize=FALSE,bg="white")
#longevity mal
cutData <- DataRum[,c(5,9,10,11,17,40,42),drop=FALSE]
cutData[cutData < 0] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies <- cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
longevity.mal<-pglsSEyPagel(MalignancyPrevalence~log10(max_longevity.months.),data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(longevity.mal)
#grab r squared, lambda, and p values from summary
r.v.longmal <- R2(phy = pruned.tree,longevity.mal)
r.v.longmal <- format(r.v.longmal[3])
r.v.longmal <-signif(as.numeric(r.v.longmal), digits= 2)
ld.v.longmal<- summary(longevity.mal)$modelStruct$corStruct
ld.v.longmal <- signif(ld.v.longmal[1])
p.v.longmal<-summary(longevity.mal)$tTable
p.v.longmal<-signif(p.v.longmal[2,4], digits = 3)
ggplot(cutData, aes(y=MalignancyPrevalence*100, x=log10(max_longevity.months.))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff", "Amphibia"= "#3B4992ff" ))+
scale_y_continuous(
limits = c(0,75),
breaks = c(0, 25,50,75),
labels = c(0, 25,50,75))+
coord_cartesian(xlim = c(log10(min(cutData$max_longevity.months.)),log10(max(cutData$max_longevity.months.))),
ylim = c(0,75),clip = "off")+
geom_abline(intercept = coef(longevity.mal)[1]*100, slope =  coef(longevity.mal)[2]*100,
color = 'grey',size = 1.2) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Malignancy Prevalence (%)") +
xlab("Max Longevity (Mo)") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
geom_text_repel(aes(label=ifelse( MalignancyPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
guides(colour = guide_legend(override.aes = list(size=5))) +
labs(title = "B.2")+
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+   labs(colour="Clade", size="Total Necropsies")+
guides(size=guide_legend())
#annotate("text", x=1.07, y=50.3, label = "5", size = 7)
#ggsave(filename='S5longmal.pdf', width=13, height=10, limitsize=FALSE,bg="white")
#rbind adds a new row to a dataframe
SummaryStats <- rbind(SummaryStats, list("Mal vs Longevity",nrow(cutData), r.v.longmal, p.v.longmal, ld.v.longmal))
#Print stats
print(SummaryStats)
}
library(nlme)
#library(rms)
library(phytools)
library(geiger)
library(caper)
library(tidyverse)
library(cowplot)
library(ggrepel)
library(ggsci)
library(patchwork)
library(poolr)
library(rr2)
#make sure to run all of this before you get to work.
#pgls sey base (just run all of this)
modPgls.SEy = function (model, data, corClass = corBrownian, tree, se = NULL,
method = c("REML", "ML"), interval = c(0, 1000), corClassValue=1, sig2e=NULL, ...)
{
Call <- match.call()
corfunc <- corClass
spp <- rownames(data)
data <- cbind(data, spp)
if (is.null(se))
se <- setNames(rep(0, Ntip(tree)), tree$tip.label)[spp]
else se <- se[spp]
lk <- function(sig2e, data, tree, model, ve, corfunc, spp) {
tree$edge.length <- tree$edge.length * sig2e
ii <- sapply(1:Ntip(tree), function(x, e) which(e ==
x), e = tree$edge[, 2])
tree$edge.length[ii] <- tree$edge.length[ii] + ve[tree$tip.label]
vf <- diag(vcv(tree))[spp]
w <- varFixed(~vf)
COR <- corfunc(corClassValue, tree, form = ~spp, ...)
fit <- gls(model, data = cbind(data, vf), correlation = COR,
method = method, weights = w)
-logLik(fit)
}
if (is.null(sig2e)) {
fit <- optimize(lk, interval = interval, data = data, tree = tree,
model = model, ve = se^2, corfunc = corfunc, spp = spp)
sig2e=fit$minimum
}
tree$edge.length <- tree$edge.length * sig2e
ii <- sapply(1:Ntip(tree), function(x, e) which(e == x),
e = tree$edge[, 2])
tree$edge.length[ii] <- tree$edge.length[ii] + se[tree$tip.label]^2
vf <- diag(vcv(tree))[spp]
w <- varFixed(~vf)
obj <- gls(model, data = cbind(data, vf), correlation = corfunc(corClassValue,
tree, form = ~spp, ...), weights = w, method = method)
obj$call <- Call
obj$sig2e <- sig2e
obj
}
#Internal function
pglsSEyPagelToOptimizeLambda=function(lambda,model,data,tree,...) {
-logLik(modPgls.SEy(model=model,data=data,tree=tree,corClassValue=lambda,corClass=corPagel,fixed=T,...)) #Returns -logLikelihood of the pgls.SEy model with lambda fixed to the value of the lambda argument. sig2e will be optimized within modPgls.SEy unless given as an argument here
}
#Function intended for users
pglsSEyPagel=function(model, data, tree, lambdaInterval=c(0,1),...){
optimizedModel=optimize(pglsSEyPagelToOptimizeLambda,lambdaInterval,model=model,data=data,tree=tree,...) #Optimizes lambda in the lambdaInterval using the pglsSEyPagelToOptimizeLambda function
return(modPgls.SEy(model=model,data=data,tree=tree,corClass=corPagel,fixed=T,corClassValue=optimizedModel$minimum,...)) #Returns the final model fit
}
#read data
Data <- read.csv("min20-2022.05.16.csv")
View(Data)
#Filter out each family in ruminants
DataRum <- subset(Data, Family == "Bovidae" | Family == "Cervidae" | Family == "Giraffidae" | Family == "Camelidae" | Family == "Ovidae" | Family == "Antilocapridae")
#Data frame for summary stats
SummaryStats = data.frame(matrix(nrow=0, ncol=5),stringsAsFactors=FALSE)
#Data frame for summary stats
SummaryStats2 = data.frame(matrix(nrow=0, ncol=11),stringsAsFactors=FALSE)
cutData <- DataRum[,c(5,9,10,11,17,36,40,42),drop=FALSE]
cutData[cutData < 0] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies <- cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
wppl.mal<-pglsSEyPagel(MalignancyPrevalence~log10(birth_weight.g.)+log10(max_longevity.months.),data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(wppl.mal)
#grab r squared, lambda, and p values from summary
r.v.wpplmal <- R2(phy = pruned.tree,wppl.mal)
r.v.wpplmal <- format(r.v.wpplmal[3])
r.v.wpplmal <-signif(as.numeric(r.v.wpplmal), digits= 2)
ld.v.wpplmal<- summary(wppl.mal)$modelStruct$corStruct
ld.v.wpplmal <- signif(ld.v.wpplmal[1], digits = 2)
p.v.wpplmal<-summary(wppl.mal)$tTable
p.v.wpplmalbw<-signif(p.v.wpplmal[2,4], digits = 3)
p.v.wpplmallong<-signif(p.v.wpplmal[3,4], digits = 2)
c.wpplmalbw<-coef(wppl.mal)[2]
c.wpplmallong<-coef(wppl.mal)[3]
#combine p values for fisher p value
p.values<-c(p.v.wpplmalbw,p.v.wpplmallong)
# Use the p.adjust function with the BH method to adjust the p-values
adjusted.p.values <- p.adjust(p.values, method = "BH")
# Determine which coefficients are significant at the 10% FDR level
significant_effects <- adjusted.p.values < 0.1
#Do combined Pvalue with fischer method
combopwpplmal<-fisher(p.values)
#rbind adds a new row to a dataframe
SummaryStats2 <- rbind(SummaryStats2, list("Mal vs BirthWeight+Long","Birth Weight","Longevity",nrow(cutData), r.v.wpmal, ld.v.wpmal, p.v.wpplmalbw, p.v.wpplmallong, adjusted.p.values[1], adjusted.p.values[2], as.numeric(combopwpplmal[1])))
#Print stats
print(SummaryStats2)
}
#Write SummaryStats to CSV
colnames(SummaryStats) = c("Iteration Name","Data Points","R2 value","P value","Lambda")
write.csv(SummaryStats, "SummaryStats.csv",row.names = FALSE)
#Write SummaryStats to CSV
colnames(SummaryStats2) = c("Iteration Name","Var1","Var2","Data Points","R2 value","Lambda","Pvalue1","Pvalue2","AdjPval1","AdjPval2","ComboP")
write.csv(SummaryStats2, "SummaryStats2.csv",row.names = FALSE)
cutData <- DataRum[,c(5,9,10,11,13,36,40,42),drop=FALSE]
cutData[cutData < 0] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies <- cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
wppl.neo<-pglsSEyPagel(NeoplasiaPrevalence~log10(birth_weight.g.)+log10(max_longevity.months.),data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(wppl.neo)
coef(wppl.neo)
#grab r squared, lambda, and p values from summary
r.v.wpplneo <- R2(phy = pruned.tree,wppl.neo)
r.v.wpplneo <- format(r.v.wpplneo[3])
r.v.wpplneo <-signif(as.numeric(r.v.wpplneo), digits= 2)
ld.v.wpplneo<- summary(wppl.neo)$modelStruct$corStruct
ld.v.wpplneo <- signif(ld.v.wpplneo[1], digits = 2)
p.v.wpplneo<-summary(wppl.neo)$tTable
p.v.wpplneobw<-signif(p.v.wpplneo[2,4], digits = 3)
p.v.wpplneolong<-signif(p.v.wpplneo[3,4], digits = 2)
c.wpplneobw<-coef(wppl.neo)[2]
c.wpplneolong<-coef(wppl.neo)[3]
# Assuming you have a vector of p-values from multiple tests
p.values <- c(p.v.wpplneobw,p.v.wpplneolong)
# Use the p.adjust function with the BH method to adjust the p-values
adjusted.p.values <- p.adjust(p.values, method = "BH")
# Determine which coefficients are significant at the 10% FDR level
significant_effects <- adjusted.p.values < 0.1
# Print which coefficients are significant
print(significant_effects)
#Do combined Pvalue with fischer method
combopwpplneo<-fisher(p.values)
#rbind adds a new row to a dataframe
SummaryStats2 <- rbind(SummaryStats2, list("Neo vs BirthWeight+Long","Birth Weight","Longevity",nrow(cutData), r.v.wpneo, ld.v.wpneo, p.v.wpplneobw,p.v.wpplneolong, adjusted.p.values[1], adjusted.p.values[2], as.numeric(combopwpplneo[1])))
#Print stats
print(SummaryStats2)
}
#Write SummaryStats to CSV
colnames(SummaryStats) = c("Iteration Name","Data Points","R2 value","P value","Lambda")
write.csv(SummaryStats, "SummaryStats.csv",row.names = FALSE)
#Write SummaryStats to CSV
colnames(SummaryStats2) = c("Iteration Name","Var1","Var2","Data Points","R2 value","Lambda","Pvalue1","Pvalue2","AdjPval1","AdjPval2","ComboP")
write.csv(SummaryStats2, "SummaryStats2.csv",row.names = FALSE)
#bw+long neo -Francesca's code
cutData <- DataRum[,c(5,9,10,11,13,36,40,42),drop=FALSE]
cutData[cutData < 0] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies <- cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
wppl.neo<-pglsSEyPagel(NeoplasiaPrevalence~log10(birth_weight.g.)+log10(max_longevity.months.),data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(wppl.neo)
coef(wppl.neo)
#grab r squared, lambda, and p values from summary
r.v.wpplneo <- R2(phy = pruned.tree,wppl.neo)
r.v.wpplneo <- format(r.v.wpplneo[3])
r.v.wpplneo <-signif(as.numeric(r.v.wpplneo), digits= 2)
ld.v.wpplneo<- summary(wppl.neo)$modelStruct$corStruct
ld.v.wpplneo <- signif(ld.v.wpplneo[1], digits = 2)
p.v.wpplneo<-summary(wppl.neo)$tTable
p.v.wpplneobw<-signif(p.v.wpplneo[2,4], digits = 3)
p.v.wpplneolong<-signif(p.v.wpplneo[3,4], digits = 2)
c.wpplneobw<-coef(wppl.neo)[2]
c.wpplneolong<-coef(wppl.neo)[3]
# Assuming you have a vector of p-values from multiple tests
p.values <- c(p.v.wpplneobw,p.v.wpplneolong)
# Use the p.adjust function with the BH method to adjust the p-values
adjusted.p.values <- p.adjust(p.values, method = "BH")
# Determine which coefficients are significant at the 10% FDR level
significant_effects <- adjusted.p.values < 0.1
# Print which coefficients are significant
print(significant_effects)
#Do combined Pvalue with fischer method
combopwpplneo<-fisher(p.values)
ggplot(cutData, aes(y=NeoplasiaPrevalence*100, x=log10(birth_weight.g.)+log10(max_longevity.months.))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff"))+
scale_y_continuous(
breaks = c(0, 25,45),
labels = c(0, 25,45))+
coord_cartesian(xlim = c((min(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),max(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),
ylim = c(0,45),clip = "off")+
geom_abline(intercept = coef(wpl.neo)[1]*100, slope =  coef(wpl.neo)[2]*100,
color = 'grey',size = 1.2) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Neoplasia Prevalence (%)") +
xlab("(log10) Max Longevity(mo) + Birth Weight(g)") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
geom_text_repel(aes(label=ifelse( NeoplasiaPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
labs(title = "Neoplasia Prevalence vs. Birth Weight+Max Longevity",
subtitle =bquote(p-value:.(p.v.wpneo)~R^2:.(r.v.wpneo)~Lambda:.(ld.v.wpneo))) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+
labs(colour="Clade", size="Total Necropsies")+
annotate("text", x=.13, y=50.3, label = "20", size = 7)
ggsave(filename='S20bwmaxlongneo.pdf', width=13, height=10, limitsize=FALSE,bg="white")
#rbind adds a new row to a dataframe
SummaryStats2 <- rbind(SummaryStats2, list("Neo vs BirthWeight+Long","Birth Weight","Longevity",nrow(cutData), r.v.wpneo, ld.v.wpneo, p.v.wpplneobw,p.v.wpplneolong, adjusted.p.values[1], adjusted.p.values[2], as.numeric(combopwpplneo[1])))
#Print stats
print(SummaryStats2)
}
ggplot(cutData, aes(y=NeoplasiaPrevalence*100, x=log10(birth_weight.g.)+log10(max_longevity.months.))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff"))+
scale_y_continuous(
breaks = c(0, 25,45),
labels = c(0, 25,45))+
coord_cartesian(xlim = c((min(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),max(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),
ylim = c(0,45),clip = "off")+
geom_abline(intercept = coef(wppl.neo)[1]*100, slope =  coef(wppl.neo)[2]*100,
color = 'grey',size = 1.2) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Neoplasia Prevalence (%)") +
xlab("(log10) Max Longevity(mo) + Birth Weight(g)") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
geom_text_repel(aes(label=ifelse( NeoplasiaPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
labs(title = "Neoplasia Prevalence vs. Birth Weight+Max Longevity",
subtitle =bquote(p-value:.(p.v.wpplneo)~R^2:.(r.v.wpplneo)~Lambda:.(ld.v.wpplneo))) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+
labs(colour="Clade", size="Total Necropsies")+
annotate("text", x=.13, y=50.3, label = "20", size = 7)
ggsave(filename='S20bwmaxlongneo.pdf', width=13, height=10, limitsize=FALSE,bg="white")
#bw+long neo -Francesca's code
cutData <- DataRum[,c(5,9,10,11,13,36,40,42),drop=FALSE]
cutData[cutData < 0] <-NA
cutData <- na.omit(cutData)
tree <- read.tree("min20Fixed516.nwk")
view(cutData)
cutData$Species <- gsub(" ", "_", cutData$Species)
cutData$common_name<-gsub("_", "", cutData$common_name)
includedSpecies <- cutData$Species
pruned.tree<-drop.tip(
tree, setdiff(
tree$tip.label, includedSpecies))
pruned.tree <- keep.tip(pruned.tree,pruned.tree$tip.label)
cutData$Keep <- cutData$Species %in% pruned.tree$tip.label
cutData <- cutData[!(cutData$Keep==FALSE),]
rownames(cutData)<-cutData$Species
SE<-setNames(cutData$SE_simple,cutData$Species)[rownames(cutData)]
view(cutData)
#pgls model
if (nrow(cutData) > 9) {
wppl.neo<-pglsSEyPagel(NeoplasiaPrevalence~log10(birth_weight.g.)+log10(max_longevity.months.),data=cutData,
tree=pruned.tree,method="ML",se=SE)
summary(wppl.neo)
coef(wppl.neo)
#grab r squared, lambda, and p values from summary
r.v.wpplneo <- R2(phy = pruned.tree,wppl.neo)
r.v.wpplneo <- format(r.v.wpplneo[3])
r.v.wpplneo <-signif(as.numeric(r.v.wpplneo), digits= 2)
ld.v.wpplneo<- summary(wppl.neo)$modelStruct$corStruct
ld.v.wpplneo <- signif(ld.v.wpplneo[1], digits = 2)
p.v.wpplneo<-summary(wppl.neo)$tTable
p.v.wpplneobw<-signif(p.v.wpplneo[2,4], digits = 3)
p.v.wpplneolong<-signif(p.v.wpplneo[3,4], digits = 2)
c.wpplneobw<-coef(wppl.neo)[2]
c.wpplneolong<-coef(wppl.neo)[3]
# Assuming you have a vector of p-values from multiple tests
p.values <- c(p.v.wpplneobw,p.v.wpplneolong)
# Use the p.adjust function with the BH method to adjust the p-values
adjusted.p.values <- p.adjust(p.values, method = "BH")
# Determine which coefficients are significant at the 10% FDR level
significant_effects <- adjusted.p.values < 0.1
# Print which coefficients are significant
print(significant_effects)
#Do combined Pvalue with fischer method
combopwpplneo<-fisher(p.values)
ggplot(cutData, aes(y=NeoplasiaPrevalence*100, x=log10(birth_weight.g.)+log10(max_longevity.months.))) +
scale_color_manual(values = c("Mammalia" = "#EB1D24", "Sauropsida"= "#008b45ff"))+
scale_y_continuous(
breaks = c(0, 25,45),
labels = c(0, 25,45))+
coord_cartesian(xlim = c((min(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),max(log10(cutData$max_longevity.months.)+log10(cutData$birth_weight.g.))),
ylim = c(0,45),clip = "off")+
geom_abline(intercept = coef(wppl.neo)[1]*100, slope =  coef(wppl.neo)[2]*100,
color = 'grey',size = 1.2) +
theme_cowplot(12)+
theme(axis.title = element_text(size = 18))+
ylab("Neoplasia Prevalence (%)") +
xlab("(log10) Max Longevity(mo) + Birth Weight(g)") +
geom_point(aes(colour= Clade, size = RecordsWithDenominators)) +
geom_text_repel(aes(label=ifelse( NeoplasiaPrevalence > .3,as.character(common_name),'')),max.overlaps = Inf,size=5, direction = "y")+
labs(title = "Neoplasia Prevalence vs. Birth Weight+Max Longevity",
subtitle =bquote(p-value:.(p.v.wpplneo)~R^2:.(r.v.wpplneo)~Lambda:.(ld.v.wpplneo))) +
guides(colour = guide_legend(override.aes = list(size=5))) +
theme(
plot.title = element_text(size = 20, face = "bold")) +
theme(legend.position = "bottom")+
labs(colour="Clade", size="Total Necropsies")+
annotate("text", x=.13, y=50.3, label = "20", size = 7)
ggsave(filename='S20bwmaxlongneo.pdf', width=13, height=10, limitsize=FALSE,bg="white")
p.v.wpplneo
;
combopwpplneo
